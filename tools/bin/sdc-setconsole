#!/usr/bin/bash
#
# This Source Code Form is subject to the terms of the Mozilla Public
# License, v. 2.0. If a copy of the MPL was not distributed with this
# file, You can obtain one at http://mozilla.org/MPL/2.0/.
#

#
# Copyright (c) 2018, Joyent, Inc.
#

#
# Usage:
#
#  sdc-setconsole <console>
#

mntsvc="svc:/system/filesystem/smartdc:default"
usbmnt="/mnt/$(svcprop -p 'joyentfs/usb_mountpoint' ${mntsvc})"
usbcp="$(svcprop -p 'joyentfs/usb_copy_path' ${mntsvc})"
menu="${usbmnt}/boot/grub/menu.lst"
menutmpl="${menu}.tmpl"
loader_conf="${usbmnt}/boot/loader.conf"

function usage
{
    cat <<USAGE
Usage: $0 [ttya|ttyb|ttyc|ttyd|text]

Example:

    $0 ttyb

USAGE

    exit 1
}

function fatal
{
    echo "`basename $0`: $*" >&2 
    exit 1
}

#
# XXX - need to implement this
#
function config_loader
{
    echo "==> XXX Loader configuration not implemented"
}

function config_grub
{
    sed -e "s/^variable os_console.*/variable os_console ${console}/" \
        < ${menu} > /tmp/menu.lst.$$
    mv -f /tmp/menu.lst.$$ ${menu}
    sed -e "s/^variable os_console.*/variable os_console ${console}/" \
        < ${menutmpl} > /tmp/menu.lst.tmpl.$$
    mv -f /tmp/menu.lst.tmpl.$$ ${menutmpl}
}

if [[ -z "$1" ]]; then
    usage
fi

console=$1

case "${console}" in
ttya|ttyb|ttyc|ttyd|text)
    ;;
graphics|vga)
    console=text
    ;;
*)
    usage
    ;;
esac

if [[ ! -d $usbmnt ]]; then
    mkdir $usbmnt || fatal "could not make $usbmnt"
fi

mnt_status=$(/opt/smartdc/bin/sdc-usbkey status)
[ $? != 0 ] && fatal "failed to get USB key status"
if [[ $mnt_status = "unmounted" ]]; then
    /opt/smartdc/bin/sdc-usbkey mount
    [ $? != 0 ] && fatal "failed to mount USB key"
fi

# XXX - change to look at MBR version
echo -n "Setting default OS console to ${console} ... "
if [[ -f ${loader_conf} ]]; then
	config_loader
elif [[ -f ${menu} ]]; then
	config_grub
else
	fatal "No boot loader configuration found!"
fi
echo "done."

echo -n "Unmounting USB key ... "
/opt/smartdb/bin/sdc-usbkey unmount
[ $? != 0 ] && fatal "failed to unmount USB key"

echo "done."

exit 0
